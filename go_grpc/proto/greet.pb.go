// Code generated by protoc-gen-go. DO NOT EDIT.
// source: greet.proto

package greet

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type User struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Age                  int64    `protobuf:"varint,2,opt,name=age,proto3" json:"age,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_32c0044392f32579, []int{0}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetAge() int64 {
	if m != nil {
		return m.Age
	}
	return 0
}

type UserRequest struct {
	User                 *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserRequest) Reset()         { *m = UserRequest{} }
func (m *UserRequest) String() string { return proto.CompactTextString(m) }
func (*UserRequest) ProtoMessage()    {}
func (*UserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_32c0044392f32579, []int{1}
}

func (m *UserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRequest.Unmarshal(m, b)
}
func (m *UserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRequest.Marshal(b, m, deterministic)
}
func (m *UserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRequest.Merge(m, src)
}
func (m *UserRequest) XXX_Size() int {
	return xxx_messageInfo_UserRequest.Size(m)
}
func (m *UserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserRequest proto.InternalMessageInfo

func (m *UserRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type UsersRequest struct {
	Users                []*User  `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UsersRequest) Reset()         { *m = UsersRequest{} }
func (m *UsersRequest) String() string { return proto.CompactTextString(m) }
func (*UsersRequest) ProtoMessage()    {}
func (*UsersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_32c0044392f32579, []int{2}
}

func (m *UsersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UsersRequest.Unmarshal(m, b)
}
func (m *UsersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UsersRequest.Marshal(b, m, deterministic)
}
func (m *UsersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UsersRequest.Merge(m, src)
}
func (m *UsersRequest) XXX_Size() int {
	return xxx_messageInfo_UsersRequest.Size(m)
}
func (m *UsersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UsersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UsersRequest proto.InternalMessageInfo

func (m *UsersRequest) GetUsers() []*User {
	if m != nil {
		return m.Users
	}
	return nil
}

type GreetResponse struct {
	Result               string   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GreetResponse) Reset()         { *m = GreetResponse{} }
func (m *GreetResponse) String() string { return proto.CompactTextString(m) }
func (*GreetResponse) ProtoMessage()    {}
func (*GreetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_32c0044392f32579, []int{3}
}

func (m *GreetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GreetResponse.Unmarshal(m, b)
}
func (m *GreetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GreetResponse.Marshal(b, m, deterministic)
}
func (m *GreetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GreetResponse.Merge(m, src)
}
func (m *GreetResponse) XXX_Size() int {
	return xxx_messageInfo_GreetResponse.Size(m)
}
func (m *GreetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GreetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GreetResponse proto.InternalMessageInfo

func (m *GreetResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func init() {
	proto.RegisterType((*User)(nil), "User")
	proto.RegisterType((*UserRequest)(nil), "UserRequest")
	proto.RegisterType((*UsersRequest)(nil), "UsersRequest")
	proto.RegisterType((*GreetResponse)(nil), "GreetResponse")
}

func init() { proto.RegisterFile("greet.proto", fileDescriptor_32c0044392f32579) }

var fileDescriptor_32c0044392f32579 = []byte{
	// 256 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0x41, 0x4b, 0xc3, 0x40,
	0x10, 0x85, 0x5d, 0x93, 0x14, 0x9c, 0xa4, 0x22, 0x73, 0x90, 0x68, 0x2f, 0x61, 0x2f, 0x0d, 0x28,
	0x4b, 0xa9, 0x57, 0x3d, 0xa8, 0x07, 0xef, 0x09, 0xfe, 0x80, 0xd8, 0x0e, 0x61, 0x21, 0xdd, 0xd4,
	0xd9, 0x8d, 0x7f, 0xdd, 0xab, 0xec, 0x1a, 0xb5, 0xc1, 0x83, 0x78, 0x9b, 0xf7, 0xf6, 0x7d, 0xb3,
	0x0f, 0x06, 0xd2, 0x96, 0x89, 0x9c, 0xda, 0x73, 0xef, 0x7a, 0x79, 0x0d, 0xf1, 0xb3, 0x25, 0x46,
	0x84, 0xd8, 0x34, 0x3b, 0xca, 0x45, 0x21, 0xca, 0x93, 0x2a, 0xcc, 0x78, 0x06, 0x51, 0xd3, 0x52,
	0x7e, 0x5c, 0x88, 0x32, 0xaa, 0xfc, 0x28, 0x4b, 0x48, 0x7d, 0xba, 0xa2, 0xd7, 0x81, 0xac, 0xc3,
	0x0b, 0x88, 0x07, 0x4b, 0x1c, 0xa0, 0x74, 0x9d, 0xa8, 0xf0, 0x16, 0x2c, 0x79, 0x05, 0x99, 0x57,
	0xf6, 0x2b, 0xba, 0x80, 0xc4, 0xfb, 0x36, 0x17, 0x45, 0xf4, 0x93, 0xfd, 0xf4, 0xe4, 0x12, 0xe6,
	0x4f, 0xbe, 0x53, 0x45, 0x76, 0xdf, 0x1b, 0x4b, 0x78, 0x0e, 0x33, 0x26, 0x3b, 0x74, 0x6e, 0xec,
	0x33, 0xaa, 0xf5, 0xbb, 0x80, 0x2c, 0x24, 0x6b, 0xe2, 0x37, 0xbd, 0x21, 0x5c, 0x42, 0x12, 0x34,
	0x66, 0xea, 0xa0, 0xd8, 0xe5, 0xa9, 0x9a, 0xec, 0x93, 0x47, 0x78, 0x07, 0xf9, 0x37, 0x48, 0x5c,
	0xeb, 0x2d, 0xd5, 0x8e, 0xa9, 0xd9, 0x69, 0xd3, 0xe2, 0x5c, 0x1d, 0x56, 0xfd, 0x0d, 0xaf, 0x04,
	0xde, 0x8e, 0xf8, 0x63, 0xa7, 0xc9, 0xb8, 0x29, 0xfe, 0xc7, 0xd7, 0xa5, 0xc0, 0x7b, 0x58, 0x04,
	0xf3, 0x41, 0x6f, 0x35, 0xd3, 0xc6, 0xe9, 0xde, 0x34, 0xdd, 0x3f, 0x16, 0xac, 0xc4, 0xcb, 0x2c,
	0x9c, 0xeb, 0xe6, 0x23, 0x00, 0x00, 0xff, 0xff, 0xc9, 0x21, 0xb0, 0x14, 0xbd, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GreetServiceClient is the client API for GreetService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GreetServiceClient interface {
	Greet(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*GreetResponse, error)
	GreetServerSideStreaming(ctx context.Context, in *UsersRequest, opts ...grpc.CallOption) (GreetService_GreetServerSideStreamingClient, error)
	GreetClientSideStreaming(ctx context.Context, opts ...grpc.CallOption) (GreetService_GreetClientSideStreamingClient, error)
	GreetBidirectionalStreaming(ctx context.Context, opts ...grpc.CallOption) (GreetService_GreetBidirectionalStreamingClient, error)
}

type greetServiceClient struct {
	cc *grpc.ClientConn
}

func NewGreetServiceClient(cc *grpc.ClientConn) GreetServiceClient {
	return &greetServiceClient{cc}
}

func (c *greetServiceClient) Greet(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*GreetResponse, error) {
	out := new(GreetResponse)
	err := c.cc.Invoke(ctx, "/GreetService/Greet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *greetServiceClient) GreetServerSideStreaming(ctx context.Context, in *UsersRequest, opts ...grpc.CallOption) (GreetService_GreetServerSideStreamingClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GreetService_serviceDesc.Streams[0], "/GreetService/GreetServerSideStreaming", opts...)
	if err != nil {
		return nil, err
	}
	x := &greetServiceGreetServerSideStreamingClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type GreetService_GreetServerSideStreamingClient interface {
	Recv() (*GreetResponse, error)
	grpc.ClientStream
}

type greetServiceGreetServerSideStreamingClient struct {
	grpc.ClientStream
}

func (x *greetServiceGreetServerSideStreamingClient) Recv() (*GreetResponse, error) {
	m := new(GreetResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *greetServiceClient) GreetClientSideStreaming(ctx context.Context, opts ...grpc.CallOption) (GreetService_GreetClientSideStreamingClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GreetService_serviceDesc.Streams[1], "/GreetService/GreetClientSideStreaming", opts...)
	if err != nil {
		return nil, err
	}
	x := &greetServiceGreetClientSideStreamingClient{stream}
	return x, nil
}

type GreetService_GreetClientSideStreamingClient interface {
	Send(*UserRequest) error
	CloseAndRecv() (*GreetResponse, error)
	grpc.ClientStream
}

type greetServiceGreetClientSideStreamingClient struct {
	grpc.ClientStream
}

func (x *greetServiceGreetClientSideStreamingClient) Send(m *UserRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *greetServiceGreetClientSideStreamingClient) CloseAndRecv() (*GreetResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(GreetResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *greetServiceClient) GreetBidirectionalStreaming(ctx context.Context, opts ...grpc.CallOption) (GreetService_GreetBidirectionalStreamingClient, error) {
	stream, err := c.cc.NewStream(ctx, &_GreetService_serviceDesc.Streams[2], "/GreetService/GreetBidirectionalStreaming", opts...)
	if err != nil {
		return nil, err
	}
	x := &greetServiceGreetBidirectionalStreamingClient{stream}
	return x, nil
}

type GreetService_GreetBidirectionalStreamingClient interface {
	Send(*UserRequest) error
	Recv() (*GreetResponse, error)
	grpc.ClientStream
}

type greetServiceGreetBidirectionalStreamingClient struct {
	grpc.ClientStream
}

func (x *greetServiceGreetBidirectionalStreamingClient) Send(m *UserRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *greetServiceGreetBidirectionalStreamingClient) Recv() (*GreetResponse, error) {
	m := new(GreetResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// GreetServiceServer is the server API for GreetService service.
type GreetServiceServer interface {
	Greet(context.Context, *UserRequest) (*GreetResponse, error)
	GreetServerSideStreaming(*UsersRequest, GreetService_GreetServerSideStreamingServer) error
	GreetClientSideStreaming(GreetService_GreetClientSideStreamingServer) error
	GreetBidirectionalStreaming(GreetService_GreetBidirectionalStreamingServer) error
}

func RegisterGreetServiceServer(s *grpc.Server, srv GreetServiceServer) {
	s.RegisterService(&_GreetService_serviceDesc, srv)
}

func _GreetService_Greet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GreetServiceServer).Greet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GreetService/Greet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GreetServiceServer).Greet(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GreetService_GreetServerSideStreaming_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(UsersRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(GreetServiceServer).GreetServerSideStreaming(m, &greetServiceGreetServerSideStreamingServer{stream})
}

type GreetService_GreetServerSideStreamingServer interface {
	Send(*GreetResponse) error
	grpc.ServerStream
}

type greetServiceGreetServerSideStreamingServer struct {
	grpc.ServerStream
}

func (x *greetServiceGreetServerSideStreamingServer) Send(m *GreetResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _GreetService_GreetClientSideStreaming_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GreetServiceServer).GreetClientSideStreaming(&greetServiceGreetClientSideStreamingServer{stream})
}

type GreetService_GreetClientSideStreamingServer interface {
	SendAndClose(*GreetResponse) error
	Recv() (*UserRequest, error)
	grpc.ServerStream
}

type greetServiceGreetClientSideStreamingServer struct {
	grpc.ServerStream
}

func (x *greetServiceGreetClientSideStreamingServer) SendAndClose(m *GreetResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *greetServiceGreetClientSideStreamingServer) Recv() (*UserRequest, error) {
	m := new(UserRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _GreetService_GreetBidirectionalStreaming_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GreetServiceServer).GreetBidirectionalStreaming(&greetServiceGreetBidirectionalStreamingServer{stream})
}

type GreetService_GreetBidirectionalStreamingServer interface {
	Send(*GreetResponse) error
	Recv() (*UserRequest, error)
	grpc.ServerStream
}

type greetServiceGreetBidirectionalStreamingServer struct {
	grpc.ServerStream
}

func (x *greetServiceGreetBidirectionalStreamingServer) Send(m *GreetResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *greetServiceGreetBidirectionalStreamingServer) Recv() (*UserRequest, error) {
	m := new(UserRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _GreetService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "GreetService",
	HandlerType: (*GreetServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Greet",
			Handler:    _GreetService_Greet_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GreetServerSideStreaming",
			Handler:       _GreetService_GreetServerSideStreaming_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GreetClientSideStreaming",
			Handler:       _GreetService_GreetClientSideStreaming_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "GreetBidirectionalStreaming",
			Handler:       _GreetService_GreetBidirectionalStreaming_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "greet.proto",
}
